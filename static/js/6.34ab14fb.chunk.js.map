{"version":3,"sources":["components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.scss","utils/validators/validator.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","error","submitFailed","fieldType","props","className","s","formControl","React","createElement","errorMessage","Textarea","Input","createField","type","name","component","placeholder","validates","validate","module","exports","maxLength","required","value","undefined","maxLength300","length","email","test","DialogItem","id","dialog","to","activeClassName","active","Message","message","AddMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","Dialogs","dialogs","messages","sendMessage","dialogsWrapper","map","person","key","formData","mapStateToProps","state","isAuth","auth","mapDispatchToProps","compose","connect","dialogsPage","Component"],"mappings":"qQAIMA,EAAc,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,MAA6D,IAAtDC,KAAOC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAeC,EAAyB,EAAzBA,UAAcC,EAAW,4CAC/E,OACI,yBAAKC,UAAS,UAAKC,IAAEC,YAAP,YAAsBL,GAAgBI,IAAEL,QACjDO,IAAMC,cAAcN,EAApB,eAAmCJ,EAAnC,GAA6CK,IAC7CF,GAAgB,0BAAMG,UAAWC,IAAEI,cAAeT,KAKzDU,EAAW,SAACP,GAAD,OACb,kBAACN,EAAD,eAAaK,UAAU,YAAeC,KAEpCQ,EAAQ,SAACR,GAAD,OACV,kBAACN,EAAD,eAAaK,UAAU,SAAYC,KAEjCS,EAAc,SAACC,EAAMC,EAAMC,EAAWC,EAAaC,GACrD,OACI,+BACI,kBAAC,IAAD,CACIJ,KAAMA,EACNC,KAAMA,EACNC,UAAWA,EACXC,YAAaA,EACbE,SAAUD,O,oBC1B1BE,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,aAAe,sC,iCCDvH,0GAEkBC,EAFZC,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,qBAItEC,GAFYJ,EAEa,IAFA,SAAAE,GAAK,OAChCA,GAASA,EAAMG,OAASL,EAAxB,kBAA+CA,EAA/C,4BAAgFG,IAG9EG,EAAQ,SAAAJ,GAAK,OACfA,IAAU,4CAA4CK,KAAKL,GACrD,6BACAC,I,oBCRVL,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qGCWxMS,EARI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIhB,EAAU,EAAVA,KACrB,OACI,wBAAIV,UAAWC,IAAE0B,QACb,kBAAC,IAAD,CAASC,GAAE,oBAAeF,GAAMG,gBAAiB5B,IAAE6B,QAASpB,KCEzDqB,EANC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,yBAAKhC,UAAWC,IAAE+B,SAAUA,I,oCCmDpC,IAAMC,EAAsBC,YAAU,CAClCC,KAAM,oBADkBD,EAlB5B,YAAyC,IAAhBE,EAAe,EAAfA,aAErB,OACI,0BAAMC,SAAUD,GACZ,kBAACE,EAAA,EAAD,CACI5B,KAAK,UACLC,UAAWL,IACXM,YAAY,aACZE,SAAU,CAACI,IAAUG,OAEzB,4BACIrB,UAAU,OADd,oBAaGuC,EArDC,SAAC,GAKO,IAJHC,EAIE,EAJFA,QACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,YACG3C,EACD,oDAMnB,OACI,yBAAKC,UAAWC,IAAE0C,gBACd,wBAAI3C,UAAWC,IAAEuC,SACZA,EAAQI,KAAI,SAAAC,GACT,OAAO,kBAAC,EAAD,iBAAgBA,EAAhB,CAAwBC,IAAKD,EAAOnB,UAInD,yBAAK1B,UAAWC,IAAEwC,UACbA,EAASG,KAAI,SAAAZ,GAAO,OAAI,kBAAC,EAAD,iBAAaA,EAAb,CAAsBc,IAAKd,EAAQN,SAC5D,kBAACO,EAAD,eACII,SAfM,SAACU,GACnBL,EAAYK,KAeIhD,O,gBC3BlBiD,EAAkB,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,S,QCSlDE,EAAqB,CACvBV,Y,MAAAA,GAGWW,sBACXC,aAXoB,SAACL,GACrB,OAAO,eACAA,EAAMM,eASYH,IDbG,SAACI,GAC7B,OAAOF,YAAQN,EAARM,EAAyB,SAAAvD,GAC5B,OACIA,EAAMmD,OAAS,kBAACM,EAAczD,GAAY,kBAAC,IAAD,CAAU6B,GAAG,gBCSpDyB,CAGbd","file":"static/js/6.34ab14fb.chunk.js","sourcesContent":["import React from 'react';\nimport s from './FormsControls.module.scss';\nimport {Field} from 'redux-form';\n\nconst FormControl = ({input, meta: {error, submitFailed}, fieldType, ...props}) => {\n    return (\n        <div className={`${s.formControl} ${submitFailed && s.error}`}>\n            {React.createElement(fieldType, {...input, ...props})}\n            {submitFailed && <span className={s.errorMessage}>{error}</span>}\n        </div>\n    );\n};\n\nconst Textarea = (props) =>\n    <FormControl fieldType=\"textarea\" {...props}/>;\n\nconst Input = (props) =>\n    <FormControl fieldType=\"input\" {...props}/>;\n\nconst createField = (type, name, component, placeholder, validates) => {\n    return (\n        <label>\n            <Field\n                type={type}\n                name={name}\n                component={component}\n                placeholder={placeholder}\n                validate={validates}\n            />\n        </label>\n    );\n};\n\nexport {Textarea, Input, createField};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"errorMessage\":\"FormsControls_errorMessage__2Lxl7\"};","const required = value => (value || typeof value === 'number' ? undefined : 'Field is Required');\n\nconst maxLength = maxLength => value =>\n    value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined;\nconst maxLength300 = maxLength(300);\n\nconst email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n        ? 'Invalid email address'\n        : undefined;\n\nexport {required, maxLength300, email};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__1J6-q\",\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialog\":\"Dialogs_dialog__3WNZB\",\"active\":\"Dialogs_active__3lrrn\",\"messages\":\"Dialogs_messages__1J3nn\",\"message\":\"Dialogs_message__3-b-X\"};","import React from 'react';\nimport s from '../Dialogs.module.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = ({id, name}) => {\n    return (\n        <li className={s.dialog}>\n            <NavLink to={`/messages/${id}`} activeClassName={s.active}>{name}</NavLink>\n        </li>\n    );\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from '../Dialogs.module.scss';\n\nconst Message = ({message}) => {\n    return (\n        <div className={s.message}>{message}</div>\n    );\n};\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.scss';\nimport DialogItem from './DialogItem/DialogsItem';\nimport Message from './Message/Message';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLength300, required} from '../../utils/validators/validator';\nimport {Textarea} from '../common/FormsControls/FormsControls';\n\nconst Dialogs = ({\n                     dialogs,\n                     messages,\n                     sendMessage,\n                     ...props\n                 }) => {\n\n    const addNewMessage = (formData) => {\n        sendMessage(formData);\n    };\n\n    return (\n        <div className={s.dialogsWrapper}>\n            <ul className={s.dialogs}>\n                {dialogs.map(person => {\n                    return <DialogItem {...person} key={person.id}/>;\n                })}\n\n            </ul>\n            <div className={s.messages}>\n                {messages.map(message => <Message {...message} key={message.id}/>)}\n                <AddMessageReduxForm\n                    onSubmit={addNewMessage}\n                    {...props}\n                />\n            </div>\n        </div>\n    );\n};\n\nfunction AddMessageForm({handleSubmit}) {\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field\n                name=\"newText\"\n                component={Textarea}\n                placeholder='Write here'\n                validate={[required, maxLength300]}\n            />\n            <button\n                className='btn'\n            >Send message\n            </button>\n        </form>\n    );\n}\n\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessage',\n\n})(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth});\nexport const withAuthRedirect = (Component) => {\n    return connect(mapStateToProps)(props => {\n        return (\n            props.isAuth ? <Component {...props} /> : <Redirect to=\"/login\"/>\n        );\n    });\n};","// import React from 'react';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\nimport {sendMessage} from '../../redux/dialogsReducer';\n\nconst mapStateToProps = (state) => {\n    return {\n        ...state.dialogsPage\n    };\n};\n\nconst mapDispatchToProps = {\n    sendMessage\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}