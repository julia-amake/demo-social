{"version":3,"sources":["components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.scss","utils/validators/validator.js","assets/images/unnamed.jpg","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileDataEditForm/ProfileDataEditForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","error","submitFailed","fieldType","props","className","s","formControl","React","createElement","errorMessage","Textarea","Input","createField","type","name","component","placeholder","validates","validate","module","exports","maxLength","required","value","undefined","maxLength300","length","email","test","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","ProfileStatus","status","updateStatus","isOwner","useState","editMode","setEditMode","statusCopy","setStatus","defaultStatus","useEffect","wrapper","editor","onBlur","autoFocus","onChange","event","target","statusHover","onClick","Contact","contactName","contacts","Contacts","keys","some","key","map","ProfileDataEditFormRedux","reduxForm","form","handleSubmit","editForm","onSubmit","ProfileData","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","desc","data","descAbout","editLink","ProfileInfo","memo","myId","updateProfile","Preloader","photos","userId","profiler","info","avatar","src","large","defaultUserPic","alt","f","formData","initialValues","Post","message","likesCount","item","pic","width","window","AddNewPostReduxForm","Field","MyPosts","posts","addPost","new","post","id","mapDispatchToProps","MyPostsContainer","connect","state","profilePage","Profile","getProfile","getStatus","compose","auth","isFetching","withRouter","match","params","history","setTimeout"],"mappings":"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","file":"static/js/4.bfcb3a96.chunk.js","sourcesContent":["import React from 'react';\nimport s from './FormsControls.module.scss';\nimport {Field} from 'redux-form';\n\nconst FormControl = ({input, meta: {error, submitFailed}, fieldType, ...props}) => {\n    return (\n        <div className={`${s.formControl} ${submitFailed && s.error}`}>\n            {React.createElement(fieldType, {...input, ...props})}\n            {submitFailed && <span className={s.errorMessage}>{error}</span>}\n        </div>\n    );\n};\n\nconst Textarea = (props) =>\n    <FormControl fieldType=\"textarea\" {...props}/>;\n\nconst Input = (props) =>\n    <FormControl fieldType=\"input\" {...props}/>;\n\nconst createField = (type, name, component, placeholder, validates) => {\n    return (\n        <label>\n            <Field\n                type={type}\n                name={name}\n                component={component}\n                placeholder={placeholder}\n                validate={validates}\n            />\n        </label>\n    );\n};\n\nexport {Textarea, Input, createField};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"errorMessage\":\"FormsControls_errorMessage__2Lxl7\"};","const required = value => (value || typeof value === 'number' ? undefined : 'Field is Required');\n\nconst maxLength = maxLength => value =>\n    value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined;\nconst maxLength300 = maxLength(300);\n\nconst email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n        ? 'Invalid email address'\n        : undefined;\n\nexport {required, maxLength300, email};","module.exports = __webpack_public_path__ + \"static/media/unnamed.f566ef83.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"ProfileInfo_cover__24oLn\",\"info\":\"ProfileInfo_info__2nY6a\",\"avatar\":\"ProfileInfo_avatar__2z4QN\",\"desc\":\"ProfileInfo_desc__3lf12\",\"descAbout\":\"ProfileInfo_descAbout__3i6rf\",\"name\":\"ProfileInfo_name__BDBmC\",\"contacts\":\"ProfileInfo_contacts__3XFcv\",\"contacts__item\":\"ProfileInfo_contacts__item__rDhza\",\"editLink\":\"ProfileInfo_editLink__2MDi3\",\"editForm\":\"ProfileInfo_editForm__1svSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileStatus_wrapper__16ihi\",\"status\":\"ProfileStatus_status__3o_Zx\",\"statusHover\":\"ProfileStatus_statusHover__3sD4b\",\"editor\":\"ProfileStatus_editor__C-crO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1P0sL\",\"new\":\"MyPosts_new__1nTxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\",\"pic\":\"Post_pic__XwlqK\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\nimport s from './ProfileStatus.module.scss';\n\nfunction ProfileStatus({status, updateStatus, isOwner}) {\n    const [editMode, setEditMode] = useState(false);\n    const [statusCopy, setStatus] = useState(status);\n\n    const defaultStatus = isOwner ? 'Add status' : '';\n\n    useEffect(() => {\n        setStatus(status);\n    }, [status]);\n\n    const activateEditMode = () => {\n        isOwner && setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        statusCopy !== status && updateStatus(statusCopy);\n    };\n\n    return (\n        <div className={s.wrapper}>\n            {editMode\n                ? <input\n                    className={s.editor}\n                    type=\"text\"\n                    value={statusCopy}\n                    onBlur={deactivateEditMode}\n                    autoFocus={true}\n                    onChange={(event) => setStatus(event.target.value)}\n                />\n                : <div\n                    className={s.status + (isOwner ? ' ' + s.statusHover : '')}\n                    onClick={activateEditMode}\n                >{statusCopy ? statusCopy : defaultStatus}</div>}\n        </div>\n    );\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport s from '../ProfileInfo.module.scss';\n\nconst Contacts = ({contacts}) => {\n    return (\n        <>\n            {Object.keys(contacts).some(key => contacts[key])\n                ? <div className={s.contacts}>\n                    <h3>Контакты</h3>\n                    {Object.keys(contacts).map((contactName) => <Contact key={contactName} contactName={contactName} contacts={contacts}/>)}\n                </div>\n                : null\n            }\n        </>\n    );\n};\n\nconst Contact = ({contactName, contacts}) =>\n    contacts[contactName] ? <span className={s['contacts__item']}>{contactName}: {contacts[contactName]}</span> : null;\n\nexport default Contacts;","import React from 'react';\nimport {createField, Input, Textarea} from '../../../common/FormsControls/FormsControls';\nimport {reduxForm} from 'redux-form';\nimport s from './../ProfileInfo.module.scss';\n\nconst ProfileDataEditForm = ({handleSubmit}) => {\n    return (\n        <form className={s.editForm} onSubmit={handleSubmit}>\n            <div>Full name: {createField('text', 'fullName', Input, 'Your full name')}</div>\n            <div>\n                <h3>About me</h3>\n                <div>About me: {createField('', 'aboutMe', Textarea, '')}</div>\n                <div><b>Looking for a job:</b> {createField('checkbox', 'lookingForAJob', Input, '')}</div>\n                <div>My professional skills: {createField('', 'lookingForAJobDescription', Textarea, '')}</div>\n            </div>\n            <button className=\"btn\">Save</button>\n        </form>\n    );\n};\n\nconst ProfileDataEditFormRedux = (reduxForm({form: 'editProfile'})(ProfileDataEditForm));\n\nexport default ProfileDataEditFormRedux;","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.scss';\nimport defaultUserPic from '../../../assets/images/unnamed.jpg';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\nimport Contacts from './Contacts/Contacts';\nimport ProfileDataEditForm from './ProfileDataEditForm/ProfileDataEditForm';\n\nconst ProfileInfo = React.memo(({profile, myId, updateProfile, ...props}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) return <Preloader/>;\n    const {photos, userId, ...profiler} = profile;\n    const isOwner = myId === userId;\n\n    const handlePhotoSelected = f => f;\n\n    const handleSubmit = (formData) => {\n        updateProfile(formData, myId);\n        setEditMode(false);\n    };\n\n    return (\n        <div className={s.info}>\n            <div className={s.avatar}>\n                <img src={photos.large ? photos.large : defaultUserPic} alt=\"\"/>\n                {isOwner && (<input type=\"file\" onChange={handlePhotoSelected}/>)}\n            </div>\n            {editMode\n                ? <ProfileDataEditForm\n                    {...props}\n                    profile={profiler}\n                    isOwner={isOwner}\n                    onSubmit={handleSubmit}\n                    initialValues={profile}\n                />\n                : <ProfileData\n                    {...props}\n                    profile={profiler}\n                    isOwner={isOwner}\n                    setEditMode={setEditMode}\n                />}\n        </div>\n    );\n});\n\nfunction ProfileData({profile, isOwner, status, updateStatus, setEditMode}) {\n    const {fullName, aboutMe, lookingForAJob, lookingForAJobDescription, contacts} = profile;\n\n    return (\n        <div className={s.desc}>\n            <div className={s.name}>{fullName}</div>\n            <div className={s.data}>\n                <ProfileStatus updateStatus={updateStatus} status={status} isOwner={isOwner}/>\n                <h3>About meme</h3>\n                <div className={s.descAbout}>{aboutMe}</div>\n                <div><b>Looking for a job:</b> {lookingForAJob ? 'Yes' : 'No'}</div>\n                <div>{lookingForAJobDescription && lookingForAJobDescription}</div>\n                <Contacts contacts={contacts}/>\n            </div>\n            {isOwner && <button className={s.editLink} onClick={() => setEditMode(true)}>Edit Profile</button>}\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.scss';\n\nconst Post = ({message, likesCount}) => {\n    return (\n        <div className={s.item}>\n            <img className={s.pic} src=\"https://i.pinimg.com/736x/62/8f/49/628f49798bba23a996bbb0fe8aad174e--avatar-james-cameron-avatar-fan-art.jpg\" width=\"100\" alt=\"\"/>\n            {message}\n            <span>{likesCount} likes</span>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.scss';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLength300, required} from '../../../utils/validators/validator';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\n\nwindow.props = [];\n\nconst MyPosts = (props) => {\n    const {posts, addPost} = props;\n\n    const handleAddPost = (formData) => {\n        addPost(formData);\n    };\n\n    return (\n        <div>\n            My Posts\n            <div className={s.new}>\n                <h3>Add new post</h3>\n                <AddNewPostReduxForm\n                    onSubmit={handleAddPost}\n                    {...props}\n                />\n            </div>\n            <div className={s.posts}>\n                {posts.map(post => {\n                    return <Post\n                        key={post.id}\n                        message={post.message}\n                        likesCount={post.likesCount}\n                    />;\n                })}\n            </div>\n        </div>\n    );\n};\n\n// class MyPosts extends PureComponent {\n//\n//     handleAddPost = (formData)  => {\n//         this.props.addPost(formData);\n//     };\n//\n//     render() {\n//         window.props.push(this.props);\n//         console.log('RENDER MY POSTS');\n//         console.log(this.props);\n//\n//         return (\n//             <div>\n//                 My Posts\n//                 <div className={s.new}>\n//                     <h3>Add new post</h3>\n//                     <AddNewPostReduxForm\n//                         onSubmit={this.handleAddPost}\n//                         {...this.props}\n//                     />\n//                 </div>\n//                 <div className={s.posts}>\n//                     {this.props.posts.map(post => {\n//                         return <Post\n//                             key={post.id}\n//                             message={post.message}\n//                             likesCount={post.likesCount}\n//                         />;\n//                     })}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nfunction AddNewPostForm({handleSubmit}) {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field\n                component={Textarea}\n                name=\"newPostBody\"\n                validate={[required, maxLength300]}\n                placeholder=\"Write here\"\n            />\n            <button className=\"btn\">Add post</button>\n        </form>\n    );\n}\n\nconst AddNewPostReduxForm = reduxForm({form: 'addNewPost'})(AddNewPostForm);\n\nexport default MyPosts;","import {addPost} from '../../../redux/profileReducer';\nimport {connect} from 'react-redux';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts\n    };\n};\nconst mapDispatchToProps = {\n    addPost\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n    return (\n        <>\n            <ProfileInfo {...props} />\n            <MyPostsContainer />\n        </>\n    );\n};\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getProfile, getStatus, updateProfile, updateStatus} from '../../redux/profileReducer';\nimport Preloader from '../common/Preloader/Preloader';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\n\nconst ProfileContainer = ({\n                              myId,\n                              getProfile,\n                              getStatus,\n                              isFetching,\n                              match: {params: {userId = myId}},\n                              history,\n                              profile, status, updateStatus, updateProfile\n                          }) => {\n\n    useEffect(() => {\n        if (userId) {\n            getProfile(userId);\n            getStatus(userId);\n        } else {\n            setTimeout(() => history.push('/login'), 0);\n        }\n    }, [userId]);\n\n    return (\n        <>\n            {(!userId || isFetching) && <Preloader/>}\n            {profile && <Profile {...{profile, status, myId, updateStatus, updateProfile}} />}\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        myId: state.auth.userId,\n        status: state.profilePage.status,\n        isFetching: state.profilePage.isFetching\n    };\n};\n\nconst mapDispatchToProps = {\n    getProfile,\n    getStatus,\n    updateStatus,\n    updateProfile\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}