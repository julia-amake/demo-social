{"version":3,"sources":["utils/validators/validator.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.scss","assets/images/unnamed.jpg","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["maxLength","required","value","undefined","maxLength300","length","email","test","FormControl","input","meta","error","submitFailed","fieldType","props","className","s","formControl","React","createElement","errorMessage","Textarea","Input","createField","type","name","component","placeholder","validates","validate","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","_s","_i","next","done","push","err","TypeError","ProfileStatus","status","updateStatus","useState","editMode","setEditMode","statusCopy","setStatus","useEffect","wrapper","editor","onBlur","autoFocus","onChange","event","target","onClick","ProfileInfo","memo","profile","Preloader","fullName","photos","aboutMe","contacts","info","avatar","src","large","defaultUserPic","alt","desc","data","keys","some","key","map","Post","message","likesCount","item","pic","width","window","AddNewPostReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","MyPosts","posts","addPost","new","formData","post","id","mapDispatchToProps","MyPostsContainer","connect","state","profilePage","Profile","getProfile","getStatus","compose","myId","auth","userId","isFetching","withRouter","match","params","history","setTimeout"],"mappings":"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","file":"static/js/4.3331f908.chunk.js","sourcesContent":["const required = value => (value || typeof value === 'number' ? undefined : 'Field is Required');\n\nconst maxLength = maxLength => value =>\n    value && value.length > maxLength ? `Must be ${maxLength} characters or less` : undefined;\nconst maxLength300 = maxLength(300);\n\nconst email = value =>\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n        ? 'Invalid email address'\n        : undefined;\n\nexport {required, maxLength300, email};","import React from 'react';\nimport s from './FormsControls.module.scss';\nimport {Field} from 'redux-form';\n\nconst FormControl = ({input, meta: {error, submitFailed}, fieldType, ...props}) => {\n    return (\n        <div className={`${s.formControl} ${submitFailed && s.error}`}>\n            {React.createElement(fieldType, {...input, ...props})}\n            {submitFailed && <span className={s.errorMessage}>{error}</span>}\n        </div>\n    );\n};\n\nconst Textarea = (props) =>\n    <FormControl fieldType=\"textarea\" {...props}/>;\n\nconst Input = (props) =>\n    <FormControl fieldType=\"input\" {...props}/>;\n\nconst createField = (type, name, component, placeholder, validates) => {\n    return (\n        <label>\n            <Field\n                type={type}\n                name={name}\n                component={component}\n                placeholder={placeholder}\n                validate={validates}\n            />\n        </label>\n    );\n};\n\nexport {Textarea, Input, createField};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3IZ5A\",\"error\":\"FormsControls_error__1QSyu\",\"errorMessage\":\"FormsControls_errorMessage__2Lxl7\"};","module.exports = __webpack_public_path__ + \"static/media/unnamed.f566ef83.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"ProfileInfo_cover__24oLn\",\"info\":\"ProfileInfo_info__2nY6a\",\"avatar\":\"ProfileInfo_avatar__2z4QN\",\"desc\":\"ProfileInfo_desc__3lf12\",\"name\":\"ProfileInfo_name__BDBmC\",\"contacts\":\"ProfileInfo_contacts__3XFcv\",\"contacts__item\":\"ProfileInfo_contacts__item__rDhza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileStatus_wrapper__16ihi\",\"status\":\"ProfileStatus_status__3o_Zx\",\"editor\":\"ProfileStatus_editor__C-crO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1P0sL\",\"new\":\"MyPosts_new__1nTxl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\",\"pic\":\"Post_pic__XwlqK\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from 'react';\nimport s from './ProfileStatus.module.scss';\n\nfunction ProfileStatus({status, updateStatus}) {\n    const [editMode, setEditMode] = useState(false);\n    const [statusCopy, setStatus] = useState(status);\n\n    useEffect(() => {\n        setStatus(status);\n    }, [status]);\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        statusCopy !== status && updateStatus(statusCopy);\n    };\n\n    return (\n        <div className={s.wrapper}>\n            {editMode\n                ? <input\n                    className={s.editor}\n                    type=\"text\"\n                    value={statusCopy}\n                    onBlur={deactivateEditMode}\n                    autoFocus={true}\n                    onChange={(event) => setStatus(event.target.value)}\n                />\n                : <div\n                    className={s.status}\n                    onClick={() => setEditMode(true)}\n                >{statusCopy ? statusCopy : 'Добавить статус'}</div>}\n\n        </div>\n    );\n}\n\nexport default ProfileStatus;","import React from 'react';\nimport s from './ProfileInfo.module.scss';\nimport defaultUserPic from '../../../assets/images/unnamed.jpg';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\n\nconst ProfileInfo = React.memo(({profile, status}) => {\n\n    if (!profile) return <Preloader/>;\n    const {fullName, photos, aboutMe, contacts} = profile;\n\n    return (\n        <div className={s.info}>\n            <img className={s.avatar}\n                 src={photos.large ? photos.large : defaultUserPic}\n                 alt=\"\"/>\n\n            <div className={s.desc}>\n                <div className={s.name}>{fullName}</div>\n                <div className={s.data}>\n                    <ProfileStatus status={status}/>\n                    <div>{aboutMe}</div>\n                    {Object.keys(contacts).some(key => contacts[key])\n                        ? <div className={s.contacts}>\n                            <h3>Контакты</h3>\n                            {Object.keys(contacts).map(key => {\n                                if (contacts[key]) {\n                                    return (\n                                        <span className={s['contacts__item']}\n                                              key={key}>{key}: {contacts[key]}</span>\n                                    );\n                                }\n                                return null;\n                            })}\n                        </div>\n                        : null\n                    }\n                </div>\n\n            </div>\n        </div>\n    );\n});\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './Post.module.scss';\n\nconst Post = ({message, likesCount}) => {\n    return (\n        <div className={s.item}>\n            <img className={s.pic} src=\"https://i.pinimg.com/736x/62/8f/49/628f49798bba23a996bbb0fe8aad174e--avatar-james-cameron-avatar-fan-art.jpg\" width=\"100\" alt=\"\"/>\n            {message}\n            <span>{likesCount} likes</span>\n        </div>\n    );\n};\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.scss';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from 'redux-form';\nimport {maxLength300, required} from '../../../utils/validators/validator';\nimport {Textarea} from '../../common/FormsControls/FormsControls';\n\nwindow.props = [];\n\nconst MyPosts = (props) => {\n    const {posts, addPost} = props;\n\n    const handleAddPost = (formData) => {\n        addPost(formData);\n    };\n\n    return (\n        <div>\n            My Posts\n            <div className={s.new}>\n                <h3>Add new post</h3>\n                <AddNewPostReduxForm\n                    onSubmit={handleAddPost}\n                    {...props}\n                />\n            </div>\n            <div className={s.posts}>\n                {posts.map(post => {\n                    return <Post\n                        key={post.id}\n                        message={post.message}\n                        likesCount={post.likesCount}\n                    />;\n                })}\n            </div>\n        </div>\n    );\n};\n\n// class MyPosts extends PureComponent {\n//\n//     handleAddPost = (formData)  => {\n//         this.props.addPost(formData);\n//     };\n//\n//     render() {\n//         window.props.push(this.props);\n//         console.log('RENDER MY POSTS');\n//         console.log(this.props);\n//\n//         return (\n//             <div>\n//                 My Posts\n//                 <div className={s.new}>\n//                     <h3>Add new post</h3>\n//                     <AddNewPostReduxForm\n//                         onSubmit={this.handleAddPost}\n//                         {...this.props}\n//                     />\n//                 </div>\n//                 <div className={s.posts}>\n//                     {this.props.posts.map(post => {\n//                         return <Post\n//                             key={post.id}\n//                             message={post.message}\n//                             likesCount={post.likesCount}\n//                         />;\n//                     })}\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n\nfunction AddNewPostForm({handleSubmit}) {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field\n                component={Textarea}\n                name=\"newPostBody\"\n                validate={[required, maxLength300]}\n                placeholder=\"Write here\"\n            />\n            <button className=\"btn\">Add post</button>\n        </form>\n    );\n}\n\nconst AddNewPostReduxForm = reduxForm({form: 'addNewPost'})(AddNewPostForm);\n\nexport default MyPosts;","import {addPost} from '../../../redux/profileReducer';\nimport {connect} from 'react-redux';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts\n    };\n};\nconst mapDispatchToProps = {\n    addPost\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n\n    return (\n        <>\n            <ProfileInfo {...props} />\n            <MyPostsContainer />\n        </>\n    );\n};\n\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getProfile, getStatus, updateStatus} from '../../redux/profileReducer';\nimport Preloader from '../common/Preloader/Preloader';\nimport {withRouter} from 'react-router-dom';\nimport {compose} from 'redux';\n\nconst ProfileContainer = ({\n                              myId,\n                              getProfile,\n                              getStatus,\n                              isFetching,\n                              match: {params: {userId = myId}},\n                              history,\n                              profile, status\n                          }) => {\n\n    useEffect(() => {\n        if (userId) {\n            getProfile(userId);\n            getStatus(userId);\n        } else {\n            setTimeout(() => history.push('/login'), 0);\n        }\n    }, [userId]);\n\n    return (\n        <>\n            {(!userId || isFetching) && <Preloader/>}\n            {profile && <Profile {...{profile, status}} />}\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        myId: state.auth.userId,\n        status: state.profilePage.status,\n        isFetching: state.profilePage.isFetching\n    };\n};\n\nconst mapDispatchToProps = {\n    getProfile,\n    getStatus,\n    updateStatus\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}